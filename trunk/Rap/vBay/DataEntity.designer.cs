#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace vBay
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DauGia")]
	public partial class DataEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTinhTrangSanPham(TinhTrangSanPham instance);
    partial void UpdateTinhTrangSanPham(TinhTrangSanPham instance);
    partial void DeleteTinhTrangSanPham(TinhTrangSanPham instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertChiTietDauGia(ChiTietDauGia instance);
    partial void UpdateChiTietDauGia(ChiTietDauGia instance);
    partial void DeleteChiTietDauGia(ChiTietDauGia instance);
    partial void InsertChiTietPhanQuyen(ChiTietPhanQuyen instance);
    partial void UpdateChiTietPhanQuyen(ChiTietPhanQuyen instance);
    partial void DeleteChiTietPhanQuyen(ChiTietPhanQuyen instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertDauGiaThanhCong(DauGiaThanhCong instance);
    partial void UpdateDauGiaThanhCong(DauGiaThanhCong instance);
    partial void DeleteDauGiaThanhCong(DauGiaThanhCong instance);
    partial void InsertGiaoDien(GiaoDien instance);
    partial void UpdateGiaoDien(GiaoDien instance);
    partial void DeleteGiaoDien(GiaoDien instance);
    partial void InsertGioiTinh(GioiTinh instance);
    partial void UpdateGioiTinh(GioiTinh instance);
    partial void DeleteGioiTinh(GioiTinh instance);
    partial void InsertLoaiMultimedia(LoaiMultimedia instance);
    partial void UpdateLoaiMultimedia(LoaiMultimedia instance);
    partial void DeleteLoaiMultimedia(LoaiMultimedia instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void UpdateLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void DeleteLoaiTaiKhoan(LoaiTaiKhoan instance);
    partial void InsertMultimedia(Multimedia instance);
    partial void UpdateMultimedia(Multimedia instance);
    partial void DeleteMultimedia(Multimedia instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertSanPham_Multimedia(SanPham_Multimedia instance);
    partial void UpdateSanPham_Multimedia(SanPham_Multimedia instance);
    partial void DeleteSanPham_Multimedia(SanPham_Multimedia instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTHAMSO(THAMSO instance);
    partial void UpdateTHAMSO(THAMSO instance);
    partial void DeleteTHAMSO(THAMSO instance);
    partial void InsertThongTinDauGia(ThongTinDauGia instance);
    partial void UpdateThongTinDauGia(ThongTinDauGia instance);
    partial void DeleteThongTinDauGia(ThongTinDauGia instance);
    partial void InsertThongTinTaiKhoan(ThongTinTaiKhoan instance);
    partial void UpdateThongTinTaiKhoan(ThongTinTaiKhoan instance);
    partial void DeleteThongTinTaiKhoan(ThongTinTaiKhoan instance);
    #endregion
		
		public DataEntityDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DauGiaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TinhTrangSanPham> TinhTrangSanPhams
		{
			get
			{
				return this.GetTable<TinhTrangSanPham>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDauGia> ChiTietDauGias
		{
			get
			{
				return this.GetTable<ChiTietDauGia>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhanQuyen> ChiTietPhanQuyens
		{
			get
			{
				return this.GetTable<ChiTietPhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<DauGiaThanhCong> DauGiaThanhCongs
		{
			get
			{
				return this.GetTable<DauGiaThanhCong>();
			}
		}
		
		public System.Data.Linq.Table<GiaoDien> GiaoDiens
		{
			get
			{
				return this.GetTable<GiaoDien>();
			}
		}
		
		public System.Data.Linq.Table<GioiTinh> GioiTinhs
		{
			get
			{
				return this.GetTable<GioiTinh>();
			}
		}
		
		public System.Data.Linq.Table<LoaiMultimedia> LoaiMultimedias
		{
			get
			{
				return this.GetTable<LoaiMultimedia>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTaiKhoan> LoaiTaiKhoans
		{
			get
			{
				return this.GetTable<LoaiTaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<Multimedia> Multimedias
		{
			get
			{
				return this.GetTable<Multimedia>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<SanPham_Multimedia> SanPham_Multimedias
		{
			get
			{
				return this.GetTable<SanPham_Multimedia>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<THAMSO> THAMSOs
		{
			get
			{
				return this.GetTable<THAMSO>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinDauGia> ThongTinDauGias
		{
			get
			{
				return this.GetTable<ThongTinDauGia>();
			}
		}
		
		public System.Data.Linq.Table<ThongTinTaiKhoan> ThongTinTaiKhoans
		{
			get
			{
				return this.GetTable<ThongTinTaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhTrangSanPham")]
	public partial class TinhTrangSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTinhTrangSanPham;
		
		private string _TenTinhTrangSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTrangSanPhamChanging(int value);
    partial void OnMaTinhTrangSanPhamChanged();
    partial void OnTenTinhTrangSanPhamChanging(string value);
    partial void OnTenTinhTrangSanPhamChanged();
    #endregion
		
		public TinhTrangSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTrangSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTinhTrangSanPham
		{
			get
			{
				return this._MaTinhTrangSanPham;
			}
			set
			{
				if ((this._MaTinhTrangSanPham != value))
				{
					this.OnMaTinhTrangSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangSanPham = value;
					this.SendPropertyChanged("MaTinhTrangSanPham");
					this.OnMaTinhTrangSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhTrangSanPham", DbType="NVarChar(50)")]
		public string TenTinhTrangSanPham
		{
			get
			{
				return this._TenTinhTrangSanPham;
			}
			set
			{
				if ((this._TenTinhTrangSanPham != value))
				{
					this.OnTenTinhTrangSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrangSanPham = value;
					this.SendPropertyChanged("TenTinhTrangSanPham");
					this.OnTenTinhTrangSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrangSanPham_SanPham", Storage="_SanPhams", ThisKey="MaTinhTrangSanPham", OtherKey="MaTinhTrangSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TinhTrangSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private System.Nullable<int> _MaThongTinTaiKhoan;
		
		private System.Nullable<int> _MaThongTinDauGia;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<ChiTietDauGia> _ChiTietDauGias;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<ThongTinDauGia> _ThongTinDauGia;
		
		private EntityRef<ThongTinTaiKhoan> _ThongTinTaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    partial void OnMaThongTinTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaThongTinTaiKhoanChanged();
    partial void OnMaThongTinDauGiaChanging(System.Nullable<int> value);
    partial void OnMaThongTinDauGiaChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._ChiTietDauGias = new EntitySet<ChiTietDauGia>(new Action<ChiTietDauGia>(this.attach_ChiTietDauGias), new Action<ChiTietDauGia>(this.detach_ChiTietDauGias));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._ThongTinDauGia = default(EntityRef<ThongTinDauGia>);
			this._ThongTinTaiKhoan = default(EntityRef<ThongTinTaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongTinTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaThongTinTaiKhoan
		{
			get
			{
				return this._MaThongTinTaiKhoan;
			}
			set
			{
				if ((this._MaThongTinTaiKhoan != value))
				{
					if (this._ThongTinTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinTaiKhoan = value;
					this.SendPropertyChanged("MaThongTinTaiKhoan");
					this.OnMaThongTinTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongTinDauGia", DbType="Int")]
		public System.Nullable<int> MaThongTinDauGia
		{
			get
			{
				return this._MaThongTinDauGia;
			}
			set
			{
				if ((this._MaThongTinDauGia != value))
				{
					if (this._ThongTinDauGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThongTinDauGiaChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinDauGia = value;
					this.SendPropertyChanged("MaThongTinDauGia");
					this.OnMaThongTinDauGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ChiTietDauGia", Storage="_ChiTietDauGias", ThisKey="UserId", OtherKey="MaTaiKhoan")]
		public EntitySet<ChiTietDauGia> ChiTietDauGias
		{
			get
			{
				return this._ChiTietDauGias;
			}
			set
			{
				this._ChiTietDauGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Comment", Storage="_Comments", ThisKey="UserId", OtherKey="MaTaiKhoan")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SanPham", Storage="_SanPhams", ThisKey="UserId", OtherKey="MaTaiKhoan")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinDauGia_aspnet_User", Storage="_ThongTinDauGia", ThisKey="MaThongTinDauGia", OtherKey="MaThongTinDauGia", IsForeignKey=true)]
		public ThongTinDauGia ThongTinDauGia
		{
			get
			{
				return this._ThongTinDauGia.Entity;
			}
			set
			{
				ThongTinDauGia previousValue = this._ThongTinDauGia.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinDauGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinDauGia.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._ThongTinDauGia.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._MaThongTinDauGia = value.MaThongTinDauGia;
					}
					else
					{
						this._MaThongTinDauGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinDauGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinTaiKhoan_aspnet_User", Storage="_ThongTinTaiKhoan", ThisKey="MaThongTinTaiKhoan", OtherKey="MaThongTinTaiKhoan", IsForeignKey=true)]
		public ThongTinTaiKhoan ThongTinTaiKhoan
		{
			get
			{
				return this._ThongTinTaiKhoan.Entity;
			}
			set
			{
				ThongTinTaiKhoan previousValue = this._ThongTinTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._ThongTinTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTinTaiKhoan.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._ThongTinTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._MaThongTinTaiKhoan = value.MaThongTinTaiKhoan;
					}
					else
					{
						this._MaThongTinTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTinTaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDauGia")]
	public partial class ChiTietDauGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietDauGia;
		
		private System.Nullable<System.Guid> _MaTaiKhoan;
		
		private int _MaSanPham;
		
		private System.Nullable<double> _GiaGiaoDich;
		
		private System.Nullable<System.DateTime> _ThoiGianGiaoDich;
		
		private string _TinhTrang;
		
		private EntitySet<DauGiaThanhCong> _DauGiaThanhCongs;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietDauGiaChanging(int value);
    partial void OnMaChiTietDauGiaChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<System.Guid> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnGiaGiaoDichChanging(System.Nullable<double> value);
    partial void OnGiaGiaoDichChanged();
    partial void OnThoiGianGiaoDichChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianGiaoDichChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public ChiTietDauGia()
		{
			this._DauGiaThanhCongs = new EntitySet<DauGiaThanhCong>(new Action<DauGiaThanhCong>(this.attach_DauGiaThanhCongs), new Action<DauGiaThanhCong>(this.detach_DauGiaThanhCongs));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietDauGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietDauGia
		{
			get
			{
				return this._MaChiTietDauGia;
			}
			set
			{
				if ((this._MaChiTietDauGia != value))
				{
					this.OnMaChiTietDauGiaChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietDauGia = value;
					this.SendPropertyChanged("MaChiTietDauGia");
					this.OnMaChiTietDauGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoan", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Int NOT NULL")]
		public int MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaGiaoDich", DbType="Float")]
		public System.Nullable<double> GiaGiaoDich
		{
			get
			{
				return this._GiaGiaoDich;
			}
			set
			{
				if ((this._GiaGiaoDich != value))
				{
					this.OnGiaGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._GiaGiaoDich = value;
					this.SendPropertyChanged("GiaGiaoDich");
					this.OnGiaGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianGiaoDich", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianGiaoDich
		{
			get
			{
				return this._ThoiGianGiaoDich;
			}
			set
			{
				if ((this._ThoiGianGiaoDich != value))
				{
					this.OnThoiGianGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianGiaoDich = value;
					this.SendPropertyChanged("ThoiGianGiaoDich");
					this.OnThoiGianGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietDauGia_DauGiaThanhCong", Storage="_DauGiaThanhCongs", ThisKey="MaChiTietDauGia", OtherKey="MaChiTietGiaoDich")]
		public EntitySet<DauGiaThanhCong> DauGiaThanhCongs
		{
			get
			{
				return this._DauGiaThanhCongs;
			}
			set
			{
				this._DauGiaThanhCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_ChiTietDauGia", Storage="_aspnet_User", ThisKey="MaTaiKhoan", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.ChiTietDauGias.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.ChiTietDauGias.Add(this);
						this._MaTaiKhoan = value.UserId;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDauGia", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDauGias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDauGias.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DauGiaThanhCongs(DauGiaThanhCong entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietDauGia = this;
		}
		
		private void detach_DauGiaThanhCongs(DauGiaThanhCong entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietDauGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhanQuyen")]
	public partial class ChiTietPhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietPhanQuyen;
		
		private System.Nullable<int> _MaLoaiTaiKhoan;
		
		private System.Nullable<int> _MaPhanQuyen;
		
		private EntityRef<LoaiTaiKhoan> _LoaiTaiKhoan;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietPhanQuyenChanging(int value);
    partial void OnMaChiTietPhanQuyenChanged();
    partial void OnMaLoaiTaiKhoanChanging(System.Nullable<int> value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnMaPhanQuyenChanging(System.Nullable<int> value);
    partial void OnMaPhanQuyenChanged();
    #endregion
		
		public ChiTietPhanQuyen()
		{
			this._LoaiTaiKhoan = default(EntityRef<LoaiTaiKhoan>);
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietPhanQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietPhanQuyen
		{
			get
			{
				return this._MaChiTietPhanQuyen;
			}
			set
			{
				if ((this._MaChiTietPhanQuyen != value))
				{
					this.OnMaChiTietPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietPhanQuyen = value;
					this.SendPropertyChanged("MaChiTietPhanQuyen");
					this.OnMaChiTietPhanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiKhoan", DbType="Int")]
		public System.Nullable<int> MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					if (this._LoaiTaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhanQuyen", DbType="Int")]
		public System.Nullable<int> MaPhanQuyen
		{
			get
			{
				return this._MaPhanQuyen;
			}
			set
			{
				if ((this._MaPhanQuyen != value))
				{
					if (this._PhanQuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaPhanQuyen = value;
					this.SendPropertyChanged("MaPhanQuyen");
					this.OnMaPhanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiKhoan_ChiTietPhanQuyen", Storage="_LoaiTaiKhoan", ThisKey="MaLoaiTaiKhoan", OtherKey="MaLoaiTaiKhoan", IsForeignKey=true)]
		public LoaiTaiKhoan LoaiTaiKhoan
		{
			get
			{
				return this._LoaiTaiKhoan.Entity;
			}
			set
			{
				LoaiTaiKhoan previousValue = this._LoaiTaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiKhoan.Entity = null;
						previousValue.ChiTietPhanQuyens.Remove(this);
					}
					this._LoaiTaiKhoan.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhanQuyens.Add(this);
						this._MaLoaiTaiKhoan = value.MaLoaiTaiKhoan;
					}
					else
					{
						this._MaLoaiTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_ChiTietPhanQuyen", Storage="_PhanQuyen", ThisKey="MaPhanQuyen", OtherKey="MaPhanQuyen", IsForeignKey=true)]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.ChiTietPhanQuyens.Remove(this);
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhanQuyens.Add(this);
						this._MaPhanQuyen = value.MaPhanQuyen;
					}
					else
					{
						this._MaPhanQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaComment;
		
		private System.Nullable<System.Guid> _MaTaiKhoan;
		
		private int _MaSanPham;
		
		private string _NoiDungComment;
		
		private System.Nullable<System.DateTime> _NgayComment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCommentChanging(int value);
    partial void OnMaCommentChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<System.Guid> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnNoiDungCommentChanging(string value);
    partial void OnNoiDungCommentChanged();
    partial void OnNgayCommentChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCommentChanged();
    #endregion
		
		public Comment()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaComment", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaComment
		{
			get
			{
				return this._MaComment;
			}
			set
			{
				if ((this._MaComment != value))
				{
					this.OnMaCommentChanging(value);
					this.SendPropertyChanging();
					this._MaComment = value;
					this.SendPropertyChanged("MaComment");
					this.OnMaCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoan", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Int NOT NULL")]
		public int MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungComment", DbType="NVarChar(500)")]
		public string NoiDungComment
		{
			get
			{
				return this._NoiDungComment;
			}
			set
			{
				if ((this._NoiDungComment != value))
				{
					this.OnNoiDungCommentChanging(value);
					this.SendPropertyChanging();
					this._NoiDungComment = value;
					this.SendPropertyChanged("NoiDungComment");
					this.OnNoiDungCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayComment", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayComment
		{
			get
			{
				return this._NgayComment;
			}
			set
			{
				if ((this._NgayComment != value))
				{
					this.OnNgayCommentChanging(value);
					this.SendPropertyChanging();
					this._NgayComment = value;
					this.SendPropertyChanged("NgayComment");
					this.OnNgayCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Comment", Storage="_aspnet_User", ThisKey="MaTaiKhoan", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._MaTaiKhoan = value.UserId;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Comment", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DauGiaThanhCong")]
	public partial class DauGiaThanhCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDauGiaThanhCong;
		
		private System.Nullable<int> _MaChiTietGiaoDich;
		
		private System.Nullable<int> _GiaKhopLenh;
		
		private EntityRef<ChiTietDauGia> _ChiTietDauGia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDauGiaThanhCongChanging(int value);
    partial void OnMaDauGiaThanhCongChanged();
    partial void OnMaChiTietGiaoDichChanging(System.Nullable<int> value);
    partial void OnMaChiTietGiaoDichChanged();
    partial void OnGiaKhopLenhChanging(System.Nullable<int> value);
    partial void OnGiaKhopLenhChanged();
    #endregion
		
		public DauGiaThanhCong()
		{
			this._ChiTietDauGia = default(EntityRef<ChiTietDauGia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDauGiaThanhCong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDauGiaThanhCong
		{
			get
			{
				return this._MaDauGiaThanhCong;
			}
			set
			{
				if ((this._MaDauGiaThanhCong != value))
				{
					this.OnMaDauGiaThanhCongChanging(value);
					this.SendPropertyChanging();
					this._MaDauGiaThanhCong = value;
					this.SendPropertyChanged("MaDauGiaThanhCong");
					this.OnMaDauGiaThanhCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietGiaoDich", DbType="Int")]
		public System.Nullable<int> MaChiTietGiaoDich
		{
			get
			{
				return this._MaChiTietGiaoDich;
			}
			set
			{
				if ((this._MaChiTietGiaoDich != value))
				{
					if (this._ChiTietDauGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChiTietGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietGiaoDich = value;
					this.SendPropertyChanged("MaChiTietGiaoDich");
					this.OnMaChiTietGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaKhopLenh", DbType="Int")]
		public System.Nullable<int> GiaKhopLenh
		{
			get
			{
				return this._GiaKhopLenh;
			}
			set
			{
				if ((this._GiaKhopLenh != value))
				{
					this.OnGiaKhopLenhChanging(value);
					this.SendPropertyChanging();
					this._GiaKhopLenh = value;
					this.SendPropertyChanged("GiaKhopLenh");
					this.OnGiaKhopLenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietDauGia_DauGiaThanhCong", Storage="_ChiTietDauGia", ThisKey="MaChiTietGiaoDich", OtherKey="MaChiTietDauGia", IsForeignKey=true)]
		public ChiTietDauGia ChiTietDauGia
		{
			get
			{
				return this._ChiTietDauGia.Entity;
			}
			set
			{
				ChiTietDauGia previousValue = this._ChiTietDauGia.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietDauGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietDauGia.Entity = null;
						previousValue.DauGiaThanhCongs.Remove(this);
					}
					this._ChiTietDauGia.Entity = value;
					if ((value != null))
					{
						value.DauGiaThanhCongs.Add(this);
						this._MaChiTietGiaoDich = value.MaChiTietDauGia;
					}
					else
					{
						this._MaChiTietGiaoDich = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChiTietDauGia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoDien")]
	public partial class GiaoDien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGiaoDien;
		
		private string _TenTheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoDienChanging(int value);
    partial void OnMaGiaoDienChanged();
    partial void OnTenThemeChanging(string value);
    partial void OnTenThemeChanged();
    #endregion
		
		public GiaoDien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoDien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGiaoDien
		{
			get
			{
				return this._MaGiaoDien;
			}
			set
			{
				if ((this._MaGiaoDien != value))
				{
					this.OnMaGiaoDienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoDien = value;
					this.SendPropertyChanged("MaGiaoDien");
					this.OnMaGiaoDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTheme", DbType="NVarChar(50)")]
		public string TenTheme
		{
			get
			{
				return this._TenTheme;
			}
			set
			{
				if ((this._TenTheme != value))
				{
					this.OnTenThemeChanging(value);
					this.SendPropertyChanging();
					this._TenTheme = value;
					this.SendPropertyChanged("TenTheme");
					this.OnTenThemeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioiTinh")]
	public partial class GioiTinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGioiTinh;
		
		private string _TenGioiTinh;
		
		private EntitySet<ThongTinTaiKhoan> _ThongTinTaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioiTinhChanging(int value);
    partial void OnMaGioiTinhChanged();
    partial void OnTenGioiTinhChanging(string value);
    partial void OnTenGioiTinhChanged();
    #endregion
		
		public GioiTinh()
		{
			this._ThongTinTaiKhoans = new EntitySet<ThongTinTaiKhoan>(new Action<ThongTinTaiKhoan>(this.attach_ThongTinTaiKhoans), new Action<ThongTinTaiKhoan>(this.detach_ThongTinTaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioiTinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGioiTinh
		{
			get
			{
				return this._MaGioiTinh;
			}
			set
			{
				if ((this._MaGioiTinh != value))
				{
					this.OnMaGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._MaGioiTinh = value;
					this.SendPropertyChanged("MaGioiTinh");
					this.OnMaGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGioiTinh", DbType="NVarChar(10)")]
		public string TenGioiTinh
		{
			get
			{
				return this._TenGioiTinh;
			}
			set
			{
				if ((this._TenGioiTinh != value))
				{
					this.OnTenGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._TenGioiTinh = value;
					this.SendPropertyChanged("TenGioiTinh");
					this.OnTenGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioiTinh_ThongTinTaiKhoan", Storage="_ThongTinTaiKhoans", ThisKey="MaGioiTinh", OtherKey="MaGioiTinh")]
		public EntitySet<ThongTinTaiKhoan> ThongTinTaiKhoans
		{
			get
			{
				return this._ThongTinTaiKhoans;
			}
			set
			{
				this._ThongTinTaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThongTinTaiKhoans(ThongTinTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.GioiTinh = this;
		}
		
		private void detach_ThongTinTaiKhoans(ThongTinTaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.GioiTinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiMultimedia")]
	public partial class LoaiMultimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiMT;
		
		private string _TenLoaiMT;
		
		private EntitySet<Multimedia> _Multimedias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiMTChanging(int value);
    partial void OnMaLoaiMTChanged();
    partial void OnTenLoaiMTChanging(string value);
    partial void OnTenLoaiMTChanged();
    #endregion
		
		public LoaiMultimedia()
		{
			this._Multimedias = new EntitySet<Multimedia>(new Action<Multimedia>(this.attach_Multimedias), new Action<Multimedia>(this.detach_Multimedias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiMT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiMT
		{
			get
			{
				return this._MaLoaiMT;
			}
			set
			{
				if ((this._MaLoaiMT != value))
				{
					this.OnMaLoaiMTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiMT = value;
					this.SendPropertyChanged("MaLoaiMT");
					this.OnMaLoaiMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiMT", DbType="NVarChar(50)")]
		public string TenLoaiMT
		{
			get
			{
				return this._TenLoaiMT;
			}
			set
			{
				if ((this._TenLoaiMT != value))
				{
					this.OnTenLoaiMTChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiMT = value;
					this.SendPropertyChanged("TenLoaiMT");
					this.OnTenLoaiMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiMultimedia_Multimedia", Storage="_Multimedias", ThisKey="MaLoaiMT", OtherKey="MaLoaiMT")]
		public EntitySet<Multimedia> Multimedias
		{
			get
			{
				return this._Multimedias;
			}
			set
			{
				this._Multimedias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Multimedias(Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMultimedia = this;
		}
		
		private void detach_Multimedias(Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.LoaiMultimedia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSanPham;
		
		private string _TenLoaiSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSanPhamChanging(int value);
    partial void OnMaLoaiSanPhamChanged();
    partial void OnTenLoaiSanPhamChanging(string value);
    partial void OnTenLoaiSanPhamChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiSanPham
		{
			get
			{
				return this._MaLoaiSanPham;
			}
			set
			{
				if ((this._MaLoaiSanPham != value))
				{
					this.OnMaLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSanPham = value;
					this.SendPropertyChanged("MaLoaiSanPham");
					this.OnMaLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSanPham", DbType="NVarChar(50)")]
		public string TenLoaiSanPham
		{
			get
			{
				return this._TenLoaiSanPham;
			}
			set
			{
				if ((this._TenLoaiSanPham != value))
				{
					this.OnTenLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSanPham = value;
					this.SendPropertyChanged("TenLoaiSanPham");
					this.OnTenLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="MaLoaiSanPham", OtherKey="MaLoaiSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTaiKhoan")]
	public partial class LoaiTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiTaiKhoan;
		
		private string _TenLoaiTaiKhoan;
		
		private EntitySet<ChiTietPhanQuyen> _ChiTietPhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiTaiKhoanChanging(int value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnTenLoaiTaiKhoanChanging(string value);
    partial void OnTenLoaiTaiKhoanChanged();
    #endregion
		
		public LoaiTaiKhoan()
		{
			this._ChiTietPhanQuyens = new EntitySet<ChiTietPhanQuyen>(new Action<ChiTietPhanQuyen>(this.attach_ChiTietPhanQuyens), new Action<ChiTietPhanQuyen>(this.detach_ChiTietPhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTaiKhoan", DbType="NVarChar(50)")]
		public string TenLoaiTaiKhoan
		{
			get
			{
				return this._TenLoaiTaiKhoan;
			}
			set
			{
				if ((this._TenLoaiTaiKhoan != value))
				{
					this.OnTenLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTaiKhoan = value;
					this.SendPropertyChanged("TenLoaiTaiKhoan");
					this.OnTenLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiKhoan_ChiTietPhanQuyen", Storage="_ChiTietPhanQuyens", ThisKey="MaLoaiTaiKhoan", OtherKey="MaLoaiTaiKhoan")]
		public EntitySet<ChiTietPhanQuyen> ChiTietPhanQuyens
		{
			get
			{
				return this._ChiTietPhanQuyens;
			}
			set
			{
				this._ChiTietPhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = this;
		}
		
		private void detach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Multimedia")]
	public partial class Multimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMT;
		
		private string _TenMT;
		
		private System.Nullable<int> _MaLoaiMT;
		
		private System.Nullable<double> _DungLuong;
		
		private System.Nullable<double> _KichThuoc;
		
		private string _LinkURL;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntitySet<SanPham_Multimedia> _SanPham_Multimedias;
		
		private EntityRef<LoaiMultimedia> _LoaiMultimedia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMTChanging(int value);
    partial void OnMaMTChanged();
    partial void OnTenMTChanging(string value);
    partial void OnTenMTChanged();
    partial void OnMaLoaiMTChanging(System.Nullable<int> value);
    partial void OnMaLoaiMTChanged();
    partial void OnDungLuongChanging(System.Nullable<double> value);
    partial void OnDungLuongChanged();
    partial void OnKichThuocChanging(System.Nullable<double> value);
    partial void OnKichThuocChanged();
    partial void OnLinkURLChanging(string value);
    partial void OnLinkURLChanged();
    #endregion
		
		public Multimedia()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._SanPham_Multimedias = new EntitySet<SanPham_Multimedia>(new Action<SanPham_Multimedia>(this.attach_SanPham_Multimedias), new Action<SanPham_Multimedia>(this.detach_SanPham_Multimedias));
			this._LoaiMultimedia = default(EntityRef<LoaiMultimedia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMT
		{
			get
			{
				return this._MaMT;
			}
			set
			{
				if ((this._MaMT != value))
				{
					this.OnMaMTChanging(value);
					this.SendPropertyChanging();
					this._MaMT = value;
					this.SendPropertyChanged("MaMT");
					this.OnMaMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMT", DbType="NVarChar(50)")]
		public string TenMT
		{
			get
			{
				return this._TenMT;
			}
			set
			{
				if ((this._TenMT != value))
				{
					this.OnTenMTChanging(value);
					this.SendPropertyChanging();
					this._TenMT = value;
					this.SendPropertyChanged("TenMT");
					this.OnTenMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiMT", DbType="Int")]
		public System.Nullable<int> MaLoaiMT
		{
			get
			{
				return this._MaLoaiMT;
			}
			set
			{
				if ((this._MaLoaiMT != value))
				{
					if (this._LoaiMultimedia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiMTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiMT = value;
					this.SendPropertyChanged("MaLoaiMT");
					this.OnMaLoaiMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DungLuong", DbType="Float")]
		public System.Nullable<double> DungLuong
		{
			get
			{
				return this._DungLuong;
			}
			set
			{
				if ((this._DungLuong != value))
				{
					this.OnDungLuongChanging(value);
					this.SendPropertyChanging();
					this._DungLuong = value;
					this.SendPropertyChanged("DungLuong");
					this.OnDungLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc", DbType="Float")]
		public System.Nullable<double> KichThuoc
		{
			get
			{
				return this._KichThuoc;
			}
			set
			{
				if ((this._KichThuoc != value))
				{
					this.OnKichThuocChanging(value);
					this.SendPropertyChanging();
					this._KichThuoc = value;
					this.SendPropertyChanged("KichThuoc");
					this.OnKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkURL", DbType="NVarChar(50)")]
		public string LinkURL
		{
			get
			{
				return this._LinkURL;
			}
			set
			{
				if ((this._LinkURL != value))
				{
					this.OnLinkURLChanging(value);
					this.SendPropertyChanging();
					this._LinkURL = value;
					this.SendPropertyChanged("LinkURL");
					this.OnLinkURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Multimedia_SanPham", Storage="_SanPhams", ThisKey="MaMT", OtherKey="MaHinhMoTa")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Multimedia_SanPham_Multimedia", Storage="_SanPham_Multimedias", ThisKey="MaMT", OtherKey="MaMT")]
		public EntitySet<SanPham_Multimedia> SanPham_Multimedias
		{
			get
			{
				return this._SanPham_Multimedias;
			}
			set
			{
				this._SanPham_Multimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiMultimedia_Multimedia", Storage="_LoaiMultimedia", ThisKey="MaLoaiMT", OtherKey="MaLoaiMT", IsForeignKey=true)]
		public LoaiMultimedia LoaiMultimedia
		{
			get
			{
				return this._LoaiMultimedia.Entity;
			}
			set
			{
				LoaiMultimedia previousValue = this._LoaiMultimedia.Entity;
				if (((previousValue != value) 
							|| (this._LoaiMultimedia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiMultimedia.Entity = null;
						previousValue.Multimedias.Remove(this);
					}
					this._LoaiMultimedia.Entity = value;
					if ((value != null))
					{
						value.Multimedias.Add(this);
						this._MaLoaiMT = value.MaLoaiMT;
					}
					else
					{
						this._MaLoaiMT = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiMultimedia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Multimedia = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Multimedia = null;
		}
		
		private void attach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.Multimedia = this;
		}
		
		private void detach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.Multimedia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhanQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<ChiTietPhanQuyen> _ChiTietPhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhanQuyenChanging(int value);
    partial void OnMaPhanQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._ChiTietPhanQuyens = new EntitySet<ChiTietPhanQuyen>(new Action<ChiTietPhanQuyen>(this.attach_ChiTietPhanQuyens), new Action<ChiTietPhanQuyen>(this.detach_ChiTietPhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhanQuyen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhanQuyen
		{
			get
			{
				return this._MaPhanQuyen;
			}
			set
			{
				if ((this._MaPhanQuyen != value))
				{
					this.OnMaPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaPhanQuyen = value;
					this.SendPropertyChanged("MaPhanQuyen");
					this.OnMaPhanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(50)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_ChiTietPhanQuyen", Storage="_ChiTietPhanQuyens", ThisKey="MaPhanQuyen", OtherKey="MaPhanQuyen")]
		public EntitySet<ChiTietPhanQuyen> ChiTietPhanQuyens
		{
			get
			{
				return this._ChiTietPhanQuyens;
			}
			set
			{
				this._ChiTietPhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = this;
		}
		
		private void detach_ChiTietPhanQuyens(ChiTietPhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSanPham;
		
		private System.Nullable<System.Guid> _MaTaiKhoan;
		
		private System.Nullable<int> _MaLoaiSanPham;
		
		private System.Nullable<int> _MaTinhTrangSanPham;
		
		private System.Nullable<int> _MaHinhMoTa;
		
		private string _TenSanPham;
		
		private System.Nullable<double> _GiaKhoiDiem;
		
		private System.Nullable<float> _GiaHienTai;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _MoTaSanPham;
		
		private EntitySet<ChiTietDauGia> _ChiTietDauGias;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<SanPham_Multimedia> _SanPham_Multimedias;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
		private EntityRef<Multimedia> _Multimedia;
		
		private EntityRef<TinhTrangSanPham> _TinhTrangSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnMaTaiKhoanChanging(System.Nullable<System.Guid> value);
    partial void OnMaTaiKhoanChanged();
    partial void OnMaLoaiSanPhamChanging(System.Nullable<int> value);
    partial void OnMaLoaiSanPhamChanged();
    partial void OnMaTinhTrangSanPhamChanging(System.Nullable<int> value);
    partial void OnMaTinhTrangSanPhamChanged();
    partial void OnMaHinhMoTaChanging(System.Nullable<int> value);
    partial void OnMaHinhMoTaChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnGiaKhoiDiemChanging(System.Nullable<double> value);
    partial void OnGiaKhoiDiemChanged();
    partial void OnGiaHienTaiChanging(System.Nullable<float> value);
    partial void OnGiaHienTaiChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnMoTaSanPhamChanging(string value);
    partial void OnMoTaSanPhamChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDauGias = new EntitySet<ChiTietDauGia>(new Action<ChiTietDauGia>(this.attach_ChiTietDauGias), new Action<ChiTietDauGia>(this.detach_ChiTietDauGias));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._SanPham_Multimedias = new EntitySet<SanPham_Multimedia>(new Action<SanPham_Multimedia>(this.attach_SanPham_Multimedias), new Action<SanPham_Multimedia>(this.detach_SanPham_Multimedias));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			this._Multimedia = default(EntityRef<Multimedia>);
			this._TinhTrangSanPham = default(EntityRef<TinhTrangSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoan", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSanPham", DbType="Int")]
		public System.Nullable<int> MaLoaiSanPham
		{
			get
			{
				return this._MaLoaiSanPham;
			}
			set
			{
				if ((this._MaLoaiSanPham != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSanPham = value;
					this.SendPropertyChanged("MaLoaiSanPham");
					this.OnMaLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTrangSanPham", DbType="Int")]
		public System.Nullable<int> MaTinhTrangSanPham
		{
			get
			{
				return this._MaTinhTrangSanPham;
			}
			set
			{
				if ((this._MaTinhTrangSanPham != value))
				{
					if (this._TinhTrangSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTinhTrangSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTrangSanPham = value;
					this.SendPropertyChanged("MaTinhTrangSanPham");
					this.OnMaTinhTrangSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHinhMoTa", DbType="Int")]
		public System.Nullable<int> MaHinhMoTa
		{
			get
			{
				return this._MaHinhMoTa;
			}
			set
			{
				if ((this._MaHinhMoTa != value))
				{
					if (this._Multimedia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHinhMoTaChanging(value);
					this.SendPropertyChanging();
					this._MaHinhMoTa = value;
					this.SendPropertyChanged("MaHinhMoTa");
					this.OnMaHinhMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(50)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaKhoiDiem", DbType="Float")]
		public System.Nullable<double> GiaKhoiDiem
		{
			get
			{
				return this._GiaKhoiDiem;
			}
			set
			{
				if ((this._GiaKhoiDiem != value))
				{
					this.OnGiaKhoiDiemChanging(value);
					this.SendPropertyChanging();
					this._GiaKhoiDiem = value;
					this.SendPropertyChanged("GiaKhoiDiem");
					this.OnGiaKhoiDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaHienTai", DbType="Real")]
		public System.Nullable<float> GiaHienTai
		{
			get
			{
				return this._GiaHienTai;
			}
			set
			{
				if ((this._GiaHienTai != value))
				{
					this.OnGiaHienTaiChanging(value);
					this.SendPropertyChanging();
					this._GiaHienTai = value;
					this.SendPropertyChanged("GiaHienTai");
					this.OnGiaHienTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaSanPham", DbType="NVarChar(50)")]
		public string MoTaSanPham
		{
			get
			{
				return this._MoTaSanPham;
			}
			set
			{
				if ((this._MoTaSanPham != value))
				{
					this.OnMoTaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MoTaSanPham = value;
					this.SendPropertyChanged("MoTaSanPham");
					this.OnMoTaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDauGia", Storage="_ChiTietDauGias", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<ChiTietDauGia> ChiTietDauGias
		{
			get
			{
				return this._ChiTietDauGias;
			}
			set
			{
				this._ChiTietDauGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Comment", Storage="_Comments", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SanPham_Multimedia", Storage="_SanPham_Multimedias", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<SanPham_Multimedia> SanPham_Multimedias
		{
			get
			{
				return this._SanPham_Multimedias;
			}
			set
			{
				this._SanPham_Multimedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_SanPham", Storage="_aspnet_User", ThisKey="MaTaiKhoan", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaTaiKhoan = value.UserId;
					}
					else
					{
						this._MaTaiKhoan = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="MaLoaiSanPham", OtherKey="MaLoaiSanPham", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSanPham = value.MaLoaiSanPham;
					}
					else
					{
						this._MaLoaiSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Multimedia_SanPham", Storage="_Multimedia", ThisKey="MaHinhMoTa", OtherKey="MaMT", IsForeignKey=true)]
		public Multimedia Multimedia
		{
			get
			{
				return this._Multimedia.Entity;
			}
			set
			{
				Multimedia previousValue = this._Multimedia.Entity;
				if (((previousValue != value) 
							|| (this._Multimedia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Multimedia.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._Multimedia.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaHinhMoTa = value.MaMT;
					}
					else
					{
						this._MaHinhMoTa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Multimedia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhTrangSanPham_SanPham", Storage="_TinhTrangSanPham", ThisKey="MaTinhTrangSanPham", OtherKey="MaTinhTrangSanPham", IsForeignKey=true)]
		public TinhTrangSanPham TinhTrangSanPham
		{
			get
			{
				return this._TinhTrangSanPham.Entity;
			}
			set
			{
				TinhTrangSanPham previousValue = this._TinhTrangSanPham.Entity;
				if (((previousValue != value) 
							|| (this._TinhTrangSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhTrangSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._TinhTrangSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaTinhTrangSanPham = value.MaTinhTrangSanPham;
					}
					else
					{
						this._MaTinhTrangSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhTrangSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDauGias(ChiTietDauGia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_SanPham_Multimedias(SanPham_Multimedia entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham_Multimedia")]
	public partial class SanPham_Multimedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietMT;
		
		private int _MaSanPham;
		
		private System.Nullable<int> _MaMT;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<Multimedia> _Multimedia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietMTChanging(int value);
    partial void OnMaChiTietMTChanged();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnMaMTChanging(System.Nullable<int> value);
    partial void OnMaMTChanged();
    #endregion
		
		public SanPham_Multimedia()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._Multimedia = default(EntityRef<Multimedia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietMT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietMT
		{
			get
			{
				return this._MaChiTietMT;
			}
			set
			{
				if ((this._MaChiTietMT != value))
				{
					this.OnMaChiTietMTChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietMT = value;
					this.SendPropertyChanged("MaChiTietMT");
					this.OnMaChiTietMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Int NOT NULL")]
		public int MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMT", DbType="Int")]
		public System.Nullable<int> MaMT
		{
			get
			{
				return this._MaMT;
			}
			set
			{
				if ((this._MaMT != value))
				{
					if (this._Multimedia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMTChanging(value);
					this.SendPropertyChanging();
					this._MaMT = value;
					this.SendPropertyChanged("MaMT");
					this.OnMaMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SanPham_Multimedia", Storage="_SanPham", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.SanPham_Multimedias.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.SanPham_Multimedias.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Multimedia_SanPham_Multimedia", Storage="_Multimedia", ThisKey="MaMT", OtherKey="MaMT", IsForeignKey=true)]
		public Multimedia Multimedia
		{
			get
			{
				return this._Multimedia.Entity;
			}
			set
			{
				Multimedia previousValue = this._Multimedia.Entity;
				if (((previousValue != value) 
							|| (this._Multimedia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Multimedia.Entity = null;
						previousValue.SanPham_Multimedias.Remove(this);
					}
					this._Multimedia.Entity = value;
					if ((value != null))
					{
						value.SanPham_Multimedias.Add(this);
						this._MaMT = value.MaMT;
					}
					else
					{
						this._MaMT = default(Nullable<int>);
					}
					this.SendPropertyChanged("Multimedia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTaiKhoan;
		
		private string _MatKhau;
		
		private int _MaLoaiTaiKhoan;
		
		private string _Avatar;
		
		private string _TrangThai;
		
		private System.Nullable<double> _DiemTinCayBan;
		
		private System.Nullable<double> _DiemTinCayMua;
		
		private System.Nullable<bool> _BiXoa;
		
		private System.Guid _MaTaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTaiKhoanChanging(string value);
    partial void OnTenTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaLoaiTaiKhoanChanging(int value);
    partial void OnMaLoaiTaiKhoanChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnDiemTinCayBanChanging(System.Nullable<double> value);
    partial void OnDiemTinCayBanChanged();
    partial void OnDiemTinCayMuaChanging(System.Nullable<double> value);
    partial void OnDiemTinCayMuaChanged();
    partial void OnBiXoaChanging(System.Nullable<bool> value);
    partial void OnBiXoaChanged();
    partial void OnMaTaiKhoanChanging(System.Guid value);
    partial void OnMaTaiKhoanChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiKhoan", DbType="NVarChar(50)")]
		public string TenTaiKhoan
		{
			get
			{
				return this._TenTaiKhoan;
			}
			set
			{
				if ((this._TenTaiKhoan != value))
				{
					this.OnTenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiKhoan = value;
					this.SendPropertyChanged("TenTaiKhoan");
					this.OnTenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiKhoan", DbType="Int NOT NULL")]
		public int MaLoaiTaiKhoan
		{
			get
			{
				return this._MaLoaiTaiKhoan;
			}
			set
			{
				if ((this._MaLoaiTaiKhoan != value))
				{
					this.OnMaLoaiTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiKhoan = value;
					this.SendPropertyChanged("MaLoaiTaiKhoan");
					this.OnMaLoaiTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(50)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50)")]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTinCayBan", DbType="Float")]
		public System.Nullable<double> DiemTinCayBan
		{
			get
			{
				return this._DiemTinCayBan;
			}
			set
			{
				if ((this._DiemTinCayBan != value))
				{
					this.OnDiemTinCayBanChanging(value);
					this.SendPropertyChanging();
					this._DiemTinCayBan = value;
					this.SendPropertyChanged("DiemTinCayBan");
					this.OnDiemTinCayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTinCayMua", DbType="Float")]
		public System.Nullable<double> DiemTinCayMua
		{
			get
			{
				return this._DiemTinCayMua;
			}
			set
			{
				if ((this._DiemTinCayMua != value))
				{
					this.OnDiemTinCayMuaChanging(value);
					this.SendPropertyChanging();
					this._DiemTinCayMua = value;
					this.SendPropertyChanged("DiemTinCayMua");
					this.OnDiemTinCayMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BiXoa", DbType="Bit")]
		public System.Nullable<bool> BiXoa
		{
			get
			{
				return this._BiXoa;
			}
			set
			{
				if ((this._BiXoa != value))
				{
					this.OnBiXoaChanging(value);
					this.SendPropertyChanging();
					this._BiXoa = value;
					this.SendPropertyChanged("BiXoa");
					this.OnBiXoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiKhoan", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaTaiKhoan
		{
			get
			{
				return this._MaTaiKhoan;
			}
			set
			{
				if ((this._MaTaiKhoan != value))
				{
					this.OnMaTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiKhoan = value;
					this.SendPropertyChanged("MaTaiKhoan");
					this.OnMaTaiKhoanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSO")]
	public partial class THAMSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDThamSo;
		
		private string _TenThamSo;
		
		private string _GiaTri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDThamSoChanging(int value);
    partial void OnIDThamSoChanged();
    partial void OnTenThamSoChanging(string value);
    partial void OnTenThamSoChanged();
    partial void OnGiaTriChanging(string value);
    partial void OnGiaTriChanged();
    #endregion
		
		public THAMSO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDThamSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDThamSo
		{
			get
			{
				return this._IDThamSo;
			}
			set
			{
				if ((this._IDThamSo != value))
				{
					this.OnIDThamSoChanging(value);
					this.SendPropertyChanging();
					this._IDThamSo = value;
					this.SendPropertyChanged("IDThamSo");
					this.OnIDThamSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThamSo", DbType="NVarChar(50)")]
		public string TenThamSo
		{
			get
			{
				return this._TenThamSo;
			}
			set
			{
				if ((this._TenThamSo != value))
				{
					this.OnTenThamSoChanging(value);
					this.SendPropertyChanging();
					this._TenThamSo = value;
					this.SendPropertyChanged("TenThamSo");
					this.OnTenThamSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTri", DbType="NVarChar(50)")]
		public string GiaTri
		{
			get
			{
				return this._GiaTri;
			}
			set
			{
				if ((this._GiaTri != value))
				{
					this.OnGiaTriChanging(value);
					this.SendPropertyChanging();
					this._GiaTri = value;
					this.SendPropertyChanged("GiaTri");
					this.OnGiaTriChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinDauGia")]
	public partial class ThongTinDauGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThongTinDauGia;
		
		private System.Nullable<double> _DiemTinCayMua;
		
		private System.Nullable<double> _DiemTinCayBan;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThongTinDauGiaChanging(int value);
    partial void OnMaThongTinDauGiaChanged();
    partial void OnDiemTinCayMuaChanging(System.Nullable<double> value);
    partial void OnDiemTinCayMuaChanged();
    partial void OnDiemTinCayBanChanging(System.Nullable<double> value);
    partial void OnDiemTinCayBanChanged();
    #endregion
		
		public ThongTinDauGia()
		{
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongTinDauGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThongTinDauGia
		{
			get
			{
				return this._MaThongTinDauGia;
			}
			set
			{
				if ((this._MaThongTinDauGia != value))
				{
					this.OnMaThongTinDauGiaChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinDauGia = value;
					this.SendPropertyChanged("MaThongTinDauGia");
					this.OnMaThongTinDauGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTinCayMua", DbType="Float")]
		public System.Nullable<double> DiemTinCayMua
		{
			get
			{
				return this._DiemTinCayMua;
			}
			set
			{
				if ((this._DiemTinCayMua != value))
				{
					this.OnDiemTinCayMuaChanging(value);
					this.SendPropertyChanging();
					this._DiemTinCayMua = value;
					this.SendPropertyChanged("DiemTinCayMua");
					this.OnDiemTinCayMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTinCayBan", DbType="Float")]
		public System.Nullable<double> DiemTinCayBan
		{
			get
			{
				return this._DiemTinCayBan;
			}
			set
			{
				if ((this._DiemTinCayBan != value))
				{
					this.OnDiemTinCayBanChanging(value);
					this.SendPropertyChanging();
					this._DiemTinCayBan = value;
					this.SendPropertyChanged("DiemTinCayBan");
					this.OnDiemTinCayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinDauGia_aspnet_User", Storage="_aspnet_Users", ThisKey="MaThongTinDauGia", OtherKey="MaThongTinDauGia")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinDauGia = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinDauGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTinTaiKhoan")]
	public partial class ThongTinTaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThongTinTaiKhoan;
		
		private System.Nullable<int> _MaGioiTinh;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _MaTheTinDung;
		
		private string _Avatar;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
		private EntityRef<GioiTinh> _GioiTinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThongTinTaiKhoanChanging(int value);
    partial void OnMaThongTinTaiKhoanChanged();
    partial void OnMaGioiTinhChanging(System.Nullable<int> value);
    partial void OnMaGioiTinhChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnMaTheTinDungChanging(string value);
    partial void OnMaTheTinDungChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    #endregion
		
		public ThongTinTaiKhoan()
		{
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			this._GioiTinh = default(EntityRef<GioiTinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongTinTaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThongTinTaiKhoan
		{
			get
			{
				return this._MaThongTinTaiKhoan;
			}
			set
			{
				if ((this._MaThongTinTaiKhoan != value))
				{
					this.OnMaThongTinTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._MaThongTinTaiKhoan = value;
					this.SendPropertyChanged("MaThongTinTaiKhoan");
					this.OnMaThongTinTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioiTinh", DbType="Int")]
		public System.Nullable<int> MaGioiTinh
		{
			get
			{
				return this._MaGioiTinh;
			}
			set
			{
				if ((this._MaGioiTinh != value))
				{
					if (this._GioiTinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._MaGioiTinh = value;
					this.SendPropertyChanged("MaGioiTinh");
					this.OnMaGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheTinDung", DbType="NVarChar(50)")]
		public string MaTheTinDung
		{
			get
			{
				return this._MaTheTinDung;
			}
			set
			{
				if ((this._MaTheTinDung != value))
				{
					this.OnMaTheTinDungChanging(value);
					this.SendPropertyChanging();
					this._MaTheTinDung = value;
					this.SendPropertyChanged("MaTheTinDung");
					this.OnMaTheTinDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(50)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTinTaiKhoan_aspnet_User", Storage="_aspnet_Users", ThisKey="MaThongTinTaiKhoan", OtherKey="MaThongTinTaiKhoan")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioiTinh_ThongTinTaiKhoan", Storage="_GioiTinh", ThisKey="MaGioiTinh", OtherKey="MaGioiTinh", IsForeignKey=true)]
		public GioiTinh GioiTinh
		{
			get
			{
				return this._GioiTinh.Entity;
			}
			set
			{
				GioiTinh previousValue = this._GioiTinh.Entity;
				if (((previousValue != value) 
							|| (this._GioiTinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GioiTinh.Entity = null;
						previousValue.ThongTinTaiKhoans.Remove(this);
					}
					this._GioiTinh.Entity = value;
					if ((value != null))
					{
						value.ThongTinTaiKhoans.Add(this);
						this._MaGioiTinh = value.MaGioiTinh;
					}
					else
					{
						this._MaGioiTinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("GioiTinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinTaiKhoan = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.ThongTinTaiKhoan = null;
		}
	}
}
#pragma warning restore 1591
